{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  setIsSubmitting(true);\n  setSubmitError(false);\n  try {\n    const response = await fetch('http://localhost:8000/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setSubmitSuccess(true);\n\n      // Reset form after successful submission\n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        subject: '',\n        message: '',\n        service: ''\n      });\n\n      // Hide success message after 5 seconds\n      setTimeout(() => {\n        setSubmitSuccess(false);\n      }, 5000);\n    } else {\n      setSubmitError(true);\n      console.error('Form submission error:', data.message);\n    }\n  } catch (error) {\n    setSubmitError(true);\n    console.error('Form submission error:', error);\n  } finally {\n    setIsSubmitting(false);\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","setIsSubmitting","setSubmitError","response","fetch","method","headers","body","JSON","stringify","formData","data","json","ok","setSubmitSuccess","setFormData","name","email","phone","subject","message","service","setTimeout","console","error"],"sources":["/Users/deepak/Seraune/frontend/src/pages/Contact.js"],"sourcesContent":["const handleSubmit = async (e) => {\n  e.preventDefault();\n  setIsSubmitting(true);\n  setSubmitError(false);\n  \n  try {\n    const response = await fetch('http://localhost:8000/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    });\n    \n    const data = await response.json();\n    \n    if (response.ok) {\n      setSubmitSuccess(true);\n      \n      // Reset form after successful submission\n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        subject: '',\n        message: '',\n        service: ''\n      });\n      \n      // Hide success message after 5 seconds\n      setTimeout(() => {\n        setSubmitSuccess(false);\n      }, 5000);\n    } else {\n      setSubmitError(true);\n      console.error('Form submission error:', data.message);\n    }\n  } catch (error) {\n    setSubmitError(true);\n    console.error('Form submission error:', error);\n  } finally {\n    setIsSubmitting(false);\n  }\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClBC,eAAe,CAAC,IAAI,CAAC;EACrBC,cAAc,CAAC,KAAK,CAAC;EAErB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;IAC/B,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAElC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACfC,gBAAgB,CAAC,IAAI,CAAC;;MAEtB;MACAC,WAAW,CAAC;QACVC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE;MACX,CAAC,CAAC;;MAEF;MACAC,UAAU,CAAC,MAAM;QACfR,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACLZ,cAAc,CAAC,IAAI,CAAC;MACpBqB,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEb,IAAI,CAACS,OAAO,CAAC;IACvD;EACF,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdtB,cAAc,CAAC,IAAI,CAAC;IACpBqB,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAChD,CAAC,SAAS;IACRvB,eAAe,CAAC,KAAK,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}